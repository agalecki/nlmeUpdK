% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pdKroneckerMethods.R
\name{logDet.pdKronecker}
\alias{logDet.pdKronecker}
\title{Compute Log-Determinant of pdKronecker}
\usage{
\method{logDet}{pdKronecker}(object, ...)
}
\arguments{
\item{object}{A `pdKronecker` object.}

\item{...}{Additional arguments (currently ignored).}
}
\value{
Numeric; the log-determinant of the `pdKronecker` object.
}
\description{
Computes the log-determinant of a `pdKronecker` object, as an S3 method for the `logDet` generic from the `nlme` package.
}
\examples{
\dontrun{
# Define matrices D1 and D2
D1 <- matrix(c(3, 9, 9, 30), nrow = 2)  # Matrix for factor f1
D2 <- matrix(c(2, 4, 4, 10), nrow = 2)  # Matrix for factor f2
D1 \%x\% D2  # Kronecker product of D1 and D2

# Create pdKronecker object
library(nlme)
pdId <- pdIdent(as.matrix(1), form = ~1)  # Identity matrix
pd1 <- pdLogChol(D1, form = ~f1-1)       # pdLogChol for D1
pd2 <- pdLogChol(D2, form = ~f2-1)       # pdLogChol for D2
pdL1 <- list(X = pdId, pD1 = pd1, pD2 = pd2)

# Create data frame with factors
f1 <- gl(2, 1, labels = c("A", "B"))
f2 <- gl(2, 1, labels = c("a", "b"))
dt <- data.frame(f1, f2)

# Create and inspect pdKronecker object
library(nlmeUpdK)
pdK <- pdKronecker(pdL1, data = dt)
logDet(pdK)  # Compute log-determinant
}
}
\author{
Andrzej Galecki, Tomasz Burzykowski
}
